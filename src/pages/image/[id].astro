---
import { Picture } from "astro:assets";
import "../../app.css";

export async function getStaticPaths() {
  const files = await Astro.glob("@assets/images/**");

  const images = files.map((file, index) => {
    const image = file.default;
    const src = file.default.src;
    const id = src.substring(src.lastIndexOf("images/") + 7, src.lastIndexOf("?")).replace("/", "-"); // id = folder-filename.ext
    return {
      params: { id },
      props: { image },
    };
  });

  images.forEach((image, index) => {
    image.props["prevId"] = index == 0 ? images[images.length - 1].params.id : images[index - 1].params.id;
    image.props["nextId"] = index == images.length - 1 ? images[0].params.id : images[index + 1].params.id;
  });

  return images;
}

interface Props {
  id?: string;
  prevId?: string;
  nextId?: string;
  image?: any;
}

const { id } = Astro.params;

const { image, prevId, nextId } = Astro.props;
---

<h1>{id}</h1>

<a href={`/image/${prevId}`} class="cursor-pointer">Prev</a>
<a href={`/image/${nextId}`} class="cursor-pointer">Next</a>

<!-- <Picture {image} class="min-w-0 max-h-screen object-contain" /> -->

<Picture src={image} formats={["avif", "webp"]} alt="A description of my image." class="object-cover w-full h-full" />

<!-- <Layout {title} noindex nofollow>
  {
    data && (
      <div class="fixed inset-0 z-10 flex justify-center items-center bg-black ">
        <Picture {data} class="min-w-0 max-h-screen object-contain" />
        {/* <MediaMenu /> */}
      </div>
    )
  }
</Layout> -->
